version: '3.8'

services:
  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: resume_backend
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
    volumes:
      - uploads_data:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - resume_network

  # Next.js Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        - NEXT_PUBLIC_SUPABASE_URL=https://buvnzjfspowdttkgohtb.supabase.co
        - NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ1dm56amZzcG93ZHR0a2dvaHRiIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTcwODcxODMsImV4cCI6MjA3MjY2MzE4M30.QtTmwQ7-T16Vw9lqqxphi5yBOM0_oy8ep93KE5GzhMI
        - SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ1dm56amZzcG93ZHR0a2dvaHRiIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTcwODcxODMsImV4cCI6MjA3MjY2MzE4M30.QtTmwQ7-T16Vw9lqqxphi5yBOM0_oy8ep93KE5GzhMI
    container_name: resume_frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - FASTAPI_URL=http://backend:8000
      - NEXT_PUBLIC_SUPABASE_URL=https://buvnzjfspowdttkgohtb.supabase.co
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ1dm56amZzcG93ZHR0a2dvaHRiIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTcwODcxODMsImV4cCI6MjA3MjY2MzE4M30.QtTmwQ7-T16Vw9lqqxphi5yBOM0_oy8ep93KE5GzhMI
      - SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ1dm56amZzcG93ZHR0a2dvaHRiIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTcwODcxODMsImV4cCI6MjA3MjY2MzE4M30.QtTmwQ7-T16Vw9lqqxphi5yBOM0_oy8ep93KE5GzhMI
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - resume_network

  # Nginx Reverse Proxy
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: resume_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ssl:/etc/ssl/certs:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - resume_network

networks:
  resume_network:
    driver: bridge

volumes:
  uploads_data: